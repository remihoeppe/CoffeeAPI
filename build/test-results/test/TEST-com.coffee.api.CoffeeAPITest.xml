<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.coffee.api.CoffeeAPITest" tests="9" skipped="0" failures="0" errors="0" timestamp="2024-10-29T15:02:45" hostname="MacBook-Pro-3" time="0.527">
  <properties/>
  <testcase name="API should return 404 when invalid name param sent through DEL request()" classname="com.coffee.api.CoffeeAPITest" time="0.047"/>
  <testcase name="API should return 404 when an invalid name is send through a GET request()" classname="com.coffee.api.CoffeeAPITest" time="0.001"/>
  <testcase name="API returns a specific roaster when GET requests contains an ID parameter()" classname="com.coffee.api.CoffeeAPITest" time="0.275"/>
  <testcase name="API should return 204 when valid name parameter sent through DELETE request()" classname="com.coffee.api.CoffeeAPITest" time="0.018"/>
  <testcase name="API should return a 204 when valid data has been sent through a POST request()" classname="com.coffee.api.CoffeeAPITest" time="0.02"/>
  <testcase name="API returns a list of roasters GET request()" classname="com.coffee.api.CoffeeAPITest" time="0.129"/>
  <testcase name="Testing server root endpoint()" classname="com.coffee.api.CoffeeAPITest" time="0.002"/>
  <testcase name="API should return 400 when invalid roaster data is sent()" classname="com.coffee.api.CoffeeAPITest" time="0.003"/>
  <testcase name="API returns a specific roaster when GET requests contains a name parameter()" classname="com.coffee.api.CoffeeAPITest" time="0.018"/>
  <system-out><![CDATA[15:02:45.011 [Test worker] DEBUG Exposed -- DROP TABLE IF EXISTS roaster
15:02:45.025 [Test worker] DEBUG Exposed -- CREATE TABLE IF NOT EXISTS roaster (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL, url VARCHAR(255) NOT NULL, address VARCHAR(255) NOT NULL)
15:02:45.040 [Test worker] DEBUG Exposed -- INSERT INTO roaster ("name", url, address) VALUES ('Monmouth Coffee Company', 'https://www.monmouthcoffee.co.uk/', '123 Street')
15:02:45.041 [Test worker] DEBUG Exposed -- INSERT INTO roaster ("name", url, address) VALUES ('Square Mile Coffee Roasters', 'https://shop.squaremilecoffee.com/', '123 Street')
15:02:45.042 [Test worker] DEBUG Exposed -- INSERT INTO roaster ("name", url, address) VALUES ('Skylark Coffee', 'https://skylark.coffee/', '123 Street')
15:02:45.044 [Test worker] DEBUG Exposed -- INSERT INTO roaster ("name", url, address) VALUES ('Grindsmith', 'https://grindsmith.com/', '123 Street')
15:02:45.045 [Test worker] DEBUG Exposed -- INSERT INTO roaster ("name", url, address) VALUES ('Curve Coffee', 'https://www.curveroasters.co.uk/', '123 Street')
Database prepared successfully
***** REQUEST: DELETE: /roasters/covfefe *****
DELETE /roasters/covfefe HTTP/1.1



15:02:45.131 [Test worker] DEBUG Exposed -- SELECT roaster.id, roaster."name", roaster.url, roaster.address FROM roaster WHERE LOWER(roaster."name") = 'covfefe' LIMIT 1
***** RESPONSE 404 to DELETE: /roasters/covfefe *****
HTTP/1.1 404 Not Found



***** REQUEST: GET: /roaster/byName/covfefe *****
GET /roaster/byName/covfefe HTTP/1.1



***** RESPONSE 404 to GET: /roaster/byName/covfefe *****
HTTP/1.1 404 Route not found



***** REQUEST: GET: /roasters/byId/4 *****
GET /roasters/byId/4 HTTP/1.1



15:02:45.159 [Test worker] DEBUG Exposed -- SELECT roaster.id, roaster."name", roaster.url, roaster.address FROM roaster WHERE roaster.id = 4 LIMIT 1
***** RESPONSE 200 to GET: /roasters/byId/4 *****
HTTP/1.1 200 OK
content-type: application/json; charset=utf-8

{"name":"Grindsmith","url":"https://grindsmith.com/","address":"123 Street"}
***** REQUEST: DELETE: /roasters/grindsmith *****
DELETE /roasters/grindsmith HTTP/1.1



15:02:45.434 [Test worker] DEBUG Exposed -- SELECT roaster.id, roaster."name", roaster.url, roaster.address FROM roaster WHERE LOWER(roaster."name") = 'grindsmith' LIMIT 1
15:02:45.442 [Test worker] DEBUG Exposed -- DELETE FROM roaster WHERE LOWER(roaster."name") = 'grindsmith'
***** RESPONSE 204 to DELETE: /roasters/grindsmith *****
HTTP/1.1 204 No Content



***** REQUEST: POST: /roasters *****
POST /roasters HTTP/1.1


{"name":"Verve Coffee","url":"https://vervecoffee.com","address":"Santa Cruz, CA"}
15:02:45.462 [Test worker] DEBUG Exposed -- INSERT INTO roaster (address, "name", url) VALUES ('Santa Cruz, CA', 'Verve Coffee', 'https://vervecoffee.com')
***** RESPONSE 204 to POST: /roasters *****
HTTP/1.1 204 No Content



***** REQUEST: GET: /roasters *****
GET /roasters HTTP/1.1



15:02:45.475 [Test worker] DEBUG Exposed -- SELECT roaster.id, roaster."name", roaster.url, roaster.address FROM roaster
***** RESPONSE 200 to GET: /roasters *****
HTTP/1.1 200 OK
content-type: application/json; charset=utf-8

[{"name":"Monmouth Coffee Company","url":"https://www.monmouthcoffee.co.uk/","address":"123 Street"},{"name":"Square Mile Coffee Roasters","url":"https://shop.squaremilecoffee.com/","address":"123 Street"},{"name":"Skylark Coffee","url":"https://skylark.coffee/","address":"123 Street"},{"name":"Curve Coffee","url":"https://www.curveroasters.co.uk/","address":"123 Street"},{"name":"Verve Coffee","url":"https://vervecoffee.com","address":"Santa Cruz, CA"}]
***** REQUEST: GET: / *****
GET / HTTP/1.1



***** RESPONSE 200 to GET: / *****
HTTP/1.1 200 OK


Coffee API
***** REQUEST: POST: /roasters *****
POST /roasters HTTP/1.1


{"name":"","url":"","address":""}
***** RESPONSE 400 to POST: /roasters *****
HTTP/1.1 400 Bad Request


Invalid roaster data
***** REQUEST: POST: /roasters *****
POST /roasters HTTP/1.1


{"name":"Grindsmith","url":"https://grindsmith.com/","address":"123 Street"}
15:02:45.612 [Test worker] DEBUG Exposed -- INSERT INTO roaster (address, "name", url) VALUES ('123 Street', 'Grindsmith', 'https://grindsmith.com/')
***** RESPONSE 204 to POST: /roasters *****
HTTP/1.1 204 No Content



***** REQUEST: GET: /roasters/byName/grindsmith *****
GET /roasters/byName/grindsmith HTTP/1.1



15:02:45.622 [Test worker] DEBUG Exposed -- SELECT roaster.id, roaster."name", roaster.url, roaster.address FROM roaster WHERE LOWER(roaster."name") = 'grindsmith' LIMIT 1
***** RESPONSE 200 to GET: /roasters/byName/grindsmith *****
HTTP/1.1 200 OK
content-type: application/json; charset=utf-8

{"name":"Grindsmith","url":"https://grindsmith.com/","address":"123 Street"}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
